# -*- coding:utf-8 -*-import jwtimport datetimeimport hashlibfrom tornado import gen, escape, httpclientfrom datetime import datetime,timedeltafrom Handler import BaseHandler,ApiHTTPErrorfrom auth import jwtauthfrom tornado.escape import json_decode,json_encodefrom sqlalchemy import func, extract, distinctfrom concurrent.futures import ThreadPoolExecutorfrom tornado.concurrent import run_on_executorSECRET = 'my_secret_key''''首页'''# 后台系统登录class AdminLogin(BaseHandler):    """    ================================================        docstring for Login        usertype 默认为0 表示普通用户，1表示为管理员用户    ================================================    """    def _set_token(self):        self.encoded = jwt.encode(            {                "user":                {                    'username': self.username,                    'userid': 1,                    'usertype': 1                },                "exp": datetime.datetime.utcnow() + datetime.timedelta(seconds=60)            },            SECRET,            algorithm='HS256'        )    def post(self):        self.username = self.get_json_argument("username")        self.passwd = self.get_json_argument('password')        passwordmd5 = hashlib.md5()        passwordmd5.update(self.passwd)        inputpasswrod = passwordmd5.hexdigest()        # print self.dbs.user.find({'username': self.username})        passwordmd5.update('root')        if self.username == 'root' and inputpasswrod == passwordmd5.hexdigest():            self._set_token()        response = {'token': self.encoded}        self.write(response)class getFree(BaseHandler):    executor = ThreadPoolExecutor(8)    @gen.coroutine    def get(self, *args, **kwargs):        print args